---
- hosts: localhost
  gather_facts: no
  tasks:

  - name: Get the hostname
    command: hostname
    register: hostname_result
    changed_when: false

  - name: Set real_hostname fact
    set_fact:
      real_hostname: "{{ hostname_result.stdout }}"


  - name: Enable IP forwarding for IPv4 permanently
    lineinfile:
      path: /etc/sysctl.conf
      line: 'net.ipv4.ip_forward=1'
      state: present

  - name: Enable IP forwarding for IPv6 permanently
    lineinfile:
      path: /etc/sysctl.conf
      line: 'net.ipv6.conf.all.forwarding=1'
      state: present

  - name: Apply sysctl changes
    command: sysctl -p

  - name: Add Tailscale repo key
    become: yes
    ansible.builtin.apt_key:
      url: 'https://pkgs.tailscale.com/stable/ubuntu/focal.gpg'
      state: present

  - name: Install Tailscale repo
    become: yes
    ansible.builtin.apt_repository:
      repo: 'deb http://pkgs.tailscale.com/stable/ubuntu focal main'
      state: present

  - name: Install Tailscale client
    become: yes
    ansible.builtin.apt:
      name: tailscale
      state: present
      update_cache: yes

  - name: Check if API key exists
    stat:
      path: /root/{{ real_hostname }}.enc
    register: api_key_file

  - name: Run upload.sh script
    ansible.builtin.script:
      cmd: /root/upload.sh
      chdir: /root/
    register: script_output
    when: api_key_file.stat.exists == false

  - name: Fetch the authkey
    ansible.builtin.get_url:
      url: https://authkey-server.westeurope.azurecontainer.io/keys/{{ real_hostname }}
      dest: "/root/{{ real_hostname }}.enc"
      validate_certs: no
    register: result
    when: api_key_file.stat.exists == false

  - name: Print result
    debug: "msg=Result: '{{ result }}'"

  - name: Decrypt authkey using openssl
    shell: "openssl rsautl -decrypt -inkey /root/client_keys/private_key.pem -in /root/{{ real_hostname }}.enc -out /tmp/{{ real_hostname }}.key"
    register: openssl_output

  - name: Fetch decrypted authkey content
    command: cat /tmp/{{ real_hostname }}.key
    register: decrypted_authkey

  - name: Start Tailscale with authkey
    become: yes
    shell: "tailscale up --authkey={{ decrypted_authkey.stdout }}"